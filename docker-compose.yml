version: '3'
services:
  rabbitmq:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 100M
        reservations:
          cpus: '0.5'
          memory: 50M
    image: rabbitmq:3.11.13-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env
  auth:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
    command: npm run start:dev auth
  film:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G
    build:
      context: ./
      dockerfile: ./apps/film/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - genre
      - occupation
      - country
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
    command: npm run start:dev film

  person:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G
    build:
      context: ./
      dockerfile: ./apps/person/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - genre
      - occupation
      - country
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
    command: npm run start:dev person
  genre:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G
    build:
      context: ./
      dockerfile: ./apps/genre/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev genre
  country:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G
    build:
      context: ./
      dockerfile: ./apps/country/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev country
  occupation:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G
    build:
      context: ./
      dockerfile: ./apps/occupation/Dockerfile
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres

#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
    command: npm run start:dev other
  api:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 1G
    build:
      context: ./
      dockerfile: ./apps/api/Dockerfile
    ports:
      - '4000:5000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - auth
      - film
      - person
      - genre
#    volumes:
#      - .:/usr/src/app
#      - /usr/src/app/node_modules
    command: npm run start:dev api
  postgres:
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 100M
        reservations:
          cpus: '0.5'
          memory: 50M
    container_name: postgres
    image: postgres:14
    env_file:
      - .env
    ports:
      - '5432:5432'


#    volumes:
#      - ./db/data:/var/lib/postgresql/data
#      - .:/var/lib/postgresql/data
#  postgres_admin:
#    image: dpage/pgadmin4
#    depends_on:
#      - postgres
#    env_file:
#      - .env
#    ports:
#      - '15432:80'
